import base64
import os

# Base64-encoded PNG icon for StressSense (a simple brain icon with stress relief elements)
ICON_DATA = """
iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAF
yGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0w
TXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRh
LyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNi4wLWMwMDIgNzkuMTY0NDg4LCAyMDIwLzA3LzEw
LTIyOjA2OjUzICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3Jn
LzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0i
IiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJo
dHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFk
b2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIiB4bWxuczpkYz0iaHR0cDovL3B1
cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2Jl
LmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjIu
MCAoV2luZG93cykiIHhtcDpDcmVhdGVEYXRlPSIyMDIzLTA3LTI1VDE1OjUyOjQ5KzAzOjAwIiB4
bXA6TWV0YWRhdGFEYXRlPSIyMDIzLTA3LTI1VDE1OjUyOjQ5KzAzOjAwIiB4bXA6TW9kaWZ5RGF0
ZT0iMjAyMy0wNy0yNVQxNTo1Mjo0OSswMzowMCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4
OWVhNjM3OS01ODM4LTMwNGQtYjZiMy04MWYxOTgxMzg3Y2QiIHhtcE1NOkRvY3VtZW50SUQ9ImFk
b2JlOmRvY2lkOnBob3Rvc2hvcDpkNTBmOTJmYy0xMzExLTNhNDUtOGJjZi00MTlkYWZmMmZjODQi
IHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo0ODBiN2ZhMC05MzJhLWM0NDMtYWJl
Ni00MDE3YTA2YTYwMTciIGRjOmZvcm1hdD0iaW1hZ2UvcG5nIiBwaG90b3Nob3A6Q29sb3JNb2Rl
PSIzIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3Jl
YXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo0ODBiN2ZhMC05MzJhLWM0NDMtYWJlNi00
MDE3YTA2YTYwMTciIHN0RXZ0OndoZW49IjIwMjMtMDctMjVUMTU6NTI6NDkrMDM6MDAiIHN0RXZ0
OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMi4wIChXaW5kb3dzKSIvPiA8cmRmOmxp
IHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ODllYTYzNzkt
NTgzOC0zMDRkLWI2YjMtODFmMTk4MTM4N2NkIiBzdEV2dDp3aGVuPSIyMDIzLTA3LTI1VDE1OjUy
OjQ5KzAzOjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgMjIuMCAoV2lu
ZG93cykiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDwv
cmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJy
Ij8+7lgwXQAADmRJREFUeJztmnlwVNedxz+ve3X3e91qtZZGuyVhCQkJBNgG29gY44XEBEdZHI/L
mTgkDmUndiqVmWQqyVQyM5VUZZzEWZzMVMaZwsYex4XtscHGYBsbhMEGiUUILRhaLfVCS+/97vXy
R3dbCGQBwpiZ/FJdfd+793d+v+/v/H7n3HcbcV0Xf8zQ/tAdeLfxvgB/7HhfgD92/N8RQP5lMj19
k70mAHIKiL81Ntgvu33vDmQAynWroizdPHCu4Znudedl5D0+1Y39sS2B9/4K0J55Z5WUyKeHj3cc
efbvfvXY4GBC/dT9dz+olYi/4DGBksls9lux0bGpkcGRU8oMnBdaYEBqMhbsedm45sm/2fpoMBS6
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
"""

def create_icon():
    """Create the icon file if it doesn't exist."""
    icon_path = os.path.join(os.path.dirname(__file__), 'assets/icon.png')
    
    # Check if icon exists
    if not os.path.exists(icon_path):
        # Ensure directory exists
        os.makedirs(os.path.dirname(icon_path), exist_ok=True)
        
        # Decode and write icon
        with open(icon_path, 'wb') as f:
            f.write(base64.b64decode(ICON_DATA))
        
        print(f"Created icon file at {icon_path}")
    
    return icon_path

if __name__ == "__main__":
    create_icon()
